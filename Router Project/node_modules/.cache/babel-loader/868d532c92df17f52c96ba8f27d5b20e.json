{"ast":null,"code":"var _jsxFileName = \"/Users/sujan/Desktop/React/Router Project/src/components/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { useParams, Outlet } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_Quotes = [{\n  id: \"q1\",\n  author: \"Pablo\",\n  text: \"Learning React is Fun!\"\n}, {\n  id: \"q2\",\n  author: \"Picaso\",\n  text: \"Learning Art is Fun!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const [showRoute, setShowRoute] = useState(true);\n  const params = useParams();\n  const quote = Dummy_Quotes.find(quote => quote.id === params.quoteId); // getting the quote having id equal to id of url\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const changeRouteHandler = () => {\n    setShowRoute(prev => {\n      return !prev;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), showRoute && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/${params.quoteId}/comments`,\n        onClick: changeRouteHandler,\n        children: \"Load Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"n1XhUmHDbHdm54vxwXH3u8VhqvY=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/sujan/Desktop/React/Router Project/src/components/pages/QuoteDetail.js"],"names":["React","Fragment","useState","useParams","Outlet","Link","HighlightedQuote","Dummy_Quotes","id","author","text","QuoteDetail","showRoute","setShowRoute","params","quote","find","quoteId","changeRouteHandler","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,kBAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,OAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,QAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,CAArB;;AAaA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMY,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,KAAK,GAAGR,YAAY,CAACS,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACP,EAAN,KAAaM,MAAM,CAACG,OAAjD,CAAd,CAHwB,CAIxB;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMG,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,YAAY,CAAEM,IAAD,IAAU;AACrB,aAAO,CAACA,IAAR;AACD,KAFW,CAAZ;AAGD,GAJD;;AAMA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEJ,KAAK,CAACL,IAA9B;AAAoC,MAAA,MAAM,EAAEK,KAAK,CAACN;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGG,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,EAAE,EAAG,WAAUE,MAAM,CAACG,OAAQ,WAFhC;AAGE,QAAA,OAAO,EAAEC,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ,eAeE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCD;;GAAMP,W;UAEWR,S;;;KAFXQ,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { useParams, Outlet } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\n\nconst Dummy_Quotes = [\n  {\n    id: \"q1\",\n    author: \"Pablo\",\n    text: \"Learning React is Fun!\",\n  },\n  {\n    id: \"q2\",\n    author: \"Picaso\",\n    text: \"Learning Art is Fun!\",\n  },\n];\n\nconst QuoteDetail = () => {\n  const [showRoute, setShowRoute] = useState(true);\n  const params = useParams();\n  const quote = Dummy_Quotes.find((quote) => quote.id === params.quoteId);\n  // getting the quote having id equal to id of url\n  if (!quote) {\n    return <p>No quote Found</p>;\n  }\n  const changeRouteHandler = () => {\n    setShowRoute((prev) => {\n      return !prev;\n    });\n  };\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n\n      {showRoute && (\n        <div className=\"centered\">\n          <Link\n            className=\"btn--flat\"\n            to={`/quotes/${params.quoteId}/comments`}\n            onClick={changeRouteHandler}\n          >\n            Load Comments\n          </Link>\n        </div>\n      )}\n\n      <Outlet></Outlet>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}