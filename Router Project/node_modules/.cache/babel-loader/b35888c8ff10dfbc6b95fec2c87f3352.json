{"ast":null,"code":"var _jsxFileName = \"/Users/sujan/Desktop/React/Router Project/src/components/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { useParams, Outlet } from \"react-router\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_Quotes = [{\n  id: \"q1\",\n  author: \"Pablo\",\n  text: \"Learning React is Fun!\"\n}, {\n  id: \"q2\",\n  author: \"Picaso\",\n  text: \"Learning Art is Fun!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = Dummy_Quotes.find(quote => quote.id === params.quoteId); // getting the quote having id equal to id of url\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/sujan/Desktop/React/Router Project/src/components/pages/QuoteDetail.js"],"names":["React","Fragment","useParams","Outlet","HighlightedQuote","Dummy_Quotes","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,cAAlC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,OAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,QAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,CAArB;;AAaA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAAjD,CAAd,CAFwB,CAGxB;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAdD;;GAAME,W;UACWP,S;;;KADXO,W;AAgBN,eAAeA,WAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { useParams, Outlet } from \"react-router\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\n\nconst Dummy_Quotes = [\n  {\n    id: \"q1\",\n    author: \"Pablo\",\n    text: \"Learning React is Fun!\",\n  },\n  {\n    id: \"q2\",\n    author: \"Picaso\",\n    text: \"Learning Art is Fun!\",\n  },\n];\n\nconst QuoteDetail = () => {\n  const params = useParams();\n  const quote = Dummy_Quotes.find((quote) => quote.id === params.quoteId);\n  // getting the quote having id equal to id of url\n  if (!quote) {\n    return <p>No quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Outlet></Outlet>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}